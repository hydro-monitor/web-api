basePath: /api
definitions:
  api_models.GetReadingDTO:
    properties:
      manualReading:
        example: false
        type: boolean
      readingId:
        example: 00336270-8191-11ea-a43d-0242ac120003
        type: string
      readingTime:
        example: "2020-04-26T19:47:53.391Z"
        type: string
      waterLevel:
        example: 60
        type: number
    type: object
  api_models.ManualReadingDTO:
    properties:
      manualReading:
        example: false
        type: boolean
    type: object
  api_models.NodeDTO:
    properties:
      description:
        example: Nodo instalado debajo de un puente
        type: string
      id:
        example: lujan-1
        type: string
      manualReading:
        example: false
        type: boolean
      password:
        example: aDF23DDcaF45k7J0
        type: string
    type: object
  api_models.ReadingDTO:
    properties:
      manualReading:
        example: false
        type: boolean
      timestamp:
        example: "2020-04-26T19:47:53.391Z"
        type: string
      waterLevel:
        example: 60
        type: number
    type: object
  api_models.StateDTO:
    properties:
      interval:
        example: 25
        type: integer
      lowerLimit:
        example: 0.5
        type: number
      next:
        example: Alto
        type: string
      picturesNum:
        example: 1
        type: integer
      prev:
        example: Bajo
        type: string
      upperLimit:
        example: 1
        type: number
    type: object
  api_models.UserDTO:
    properties:
      admin:
        type: boolean
      email:
        type: string
      lastName:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  echo.HTTPError:
    properties:
      code:
        type: integer
      internal:
        description: Stores the error returned by an external dependency
        type: error
      message:
        type: object
    type: object
host: localhost
info:
  contact:
    email: manu.porto94@gmail.com
    name: Manuel Porto
  description: Esta es la definición de la API del servidor del Hydro Monitor
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Hydro Monitor Web API
  version: 0.1.0
paths:
  /nodes:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api_models.NodeDTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Obtiene todos los nodos
      tags:
      - nodes
    post:
      consumes:
      - application/json
      parameters:
      - description: ID del nodo
        in: path
        name: node_id
        required: true
        type: string
      - description: Información del nodo
        in: body
        name: node
        required: true
        schema:
          $ref: '#/definitions/api_models.NodeDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api_models.NodeDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Crea un nodo
      tags:
      - nodes
  /nodes/{node_id}:
    delete:
      parameters:
      - description: ID del nodo
        in: path
        name: node_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Borra un nodo
      tags:
      - nodes
    get:
      parameters:
      - description: ID del nodo
        in: path
        name: node_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api_models.NodeDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Obtiene la información completa de un nodo
      tags:
      - nodes
    put:
      consumes:
      - application/json
      description: Actualiza la información de un nodo
      parameters:
      - description: ID del nodo
        in: path
        name: node_id
        required: true
        type: string
      - description: Información del nodo
        in: body
        name: node
        required: true
        schema:
          $ref: '#/definitions/api_models.NodeDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Actualiza la información de un nodo
      tags:
      - nodes
  /nodes/{node_id}/configuration:
    get:
      description: Devuelve un mapa de estados en donde la clave de cada uno es el nombre del mismo.
      parameters:
      - description: ID del nodo
        in: path
        name: node_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/api_models.StateDTO'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Obtiene la configuración de un nodo
      tags:
      - nodes
    post:
      consumes:
      - application/json
      description: Devuelve un mapa de estados (no un array como se ve a continuación) en donde la clave de cada uno es el nombre del mismo.
      parameters:
      - description: ID del nodo
        in: path
        name: node_id
        required: true
        type: string
      - description: Configuración
        in: body
        name: node
        required: true
        schema:
          additionalProperties:
            $ref: '#/definitions/api_models.StateDTO'
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              $ref: '#/definitions/api_models.StateDTO'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Crea o actualiza la configuración para el nodo dado
      tags:
      - nodes
  /nodes/{node_id}/manual-reading:
    get:
      parameters:
      - description: ID del nodo
        in: path
        name: node_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api_models.ManualReadingDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Obtiene el estado de medición manual de un nodo
      tags:
      - nodes
    put:
      consumes:
      - application/json
      parameters:
      - description: ID del nodo
        in: path
        name: node_id
        required: true
        type: string
      - description: Medición manual
        in: body
        name: manual_reading
        required: true
        schema:
          $ref: '#/definitions/api_models.ManualReadingDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api_models.ManualReadingDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Actualiza el estado de medición manual de un nodo
      tags:
      - nodes
  /nodes/{node_id}/readings:
    get:
      parameters:
      - description: ID del nodo
        in: path
        name: node_id
        required: true
        type: string
      - description: Cantidad máxima de mediciones por página
        in: query
        name: page_size
        type: integer
      - description: String en base 64 que contiene el estado de pagina. Utilizado para traer la próxima página
        in: query
        name: page_state
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Page-State:
              description: Page state
              type: string
          schema:
            items:
              $ref: '#/definitions/api_models.GetReadingDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Obtiene las mediciones de un nodo
      tags:
      - readings
    post:
      consumes:
      - application/json
      parameters:
      - description: ID del nodo
        in: path
        name: node_id
        required: true
        type: string
      - description: Datos de la medición
        in: body
        name: reading
        required: true
        schema:
          $ref: '#/definitions/api_models.ReadingDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api_models.GetReadingDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Crea una medición
      tags:
      - readings
  /nodes/{node_id}/readings/{reading_id}:
    delete:
      parameters:
      - description: ID del nodo
        in: path
        name: node_id
        required: true
        type: string
      - description: ID de la medición
        in: path
        name: reading_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Borra una medición
      tags:
      - readings
    get:
      parameters:
      - description: ID del nodo
        in: path
        name: node_id
        required: true
        type: string
      - description: ID de la medición
        in: path
        name: reading_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api_models.GetReadingDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Obtiene los datos de una medición
      tags:
      - readings
  /nodes/{node_id}/readings/{reading_id}/photos:
    get:
      parameters:
      - description: ID del nodo
        in: path
        name: node_id
        required: true
        type: string
      - description: ID de la medición
        in: path
        name: reading_id
        required: true
        type: string
      produces:
      - image/jpeg
      responses:
        "200":
          description: Ok
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Obtiene la foto de una medición
      tags:
      - readings
    post:
      consumes:
      - image/jpeg
      parameters:
      - description: ID del nodo
        in: path
        name: node_id
        required: true
        type: string
      - description: ID de la medición
        in: path
        name: reading_id
        required: true
        type: string
      - description: Foto de la medición
        in: formData
        name: picture
        required: true
        type: string
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Agrega una foto a la medición
      tags:
      - readings
  /nodes/last-reading:
    get:
      parameters:
      - description: ID del nodo
        in: path
        name: node_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/api_models.GetReadingDTO'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Obtiene la última medición de todos los nodos
      tags:
      - readings
  /session:
    post:
      parameters:
      - description: Dirección de correo del usuario
        in: formData
        name: username
        required: true
        type: string
      - description: Contraseña del usuario
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Crea una nueva sesión
      tags:
      - users
  /users:
    post:
      consumes:
      - application/json
      parameters:
      - description: Datos del usario
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api_models.UserDTO'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Crea un usuario
      tags:
      - users
  /users/{email}:
    delete:
      parameters:
      - description: Dirección de correo del usuario
        in: path
        name: email
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Borra un usuario
      tags:
      - users
    get:
      parameters:
      - description: Dirección de correo del usuario
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api_models.UserDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Obtiene la información de un usuario
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: Dirección de correo del usuario
        in: path
        name: email
        required: true
        type: string
      - description: Información del usuario
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api_models.UserDTO'
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Actualiza la información de un usuario
      tags:
      - users
swagger: "2.0"
